#!/usr/bin/env python
import os
import csv
from uuid import uuid4

from flask import Flask, redirect, url_for, request, render_template,make_response,jsonify,session,Response
from flask.ext.sqlalchemy import SQLAlchemy
from pymongo import MongoClient
from flask.ext.session import Session

from config import *
#from soe import *

import json
from bson import json_util





app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = SQLALCHEMY_DATABASE_URI = "mysql://%s:%s@%s:%s/%s" % (
            'root',
            #os.environ["DB_ENV_MYSQL_USER"],
            os.environ["DB_ENV_MYSQL_PASSWORD"],
            os.environ["DB_ENV_MYSQL_HOSTNAME"],
            os.environ["DB_ENV_MYSQL_PORT"],
            os.environ["DB_ENV_MYSQL_DATABASE"]
        )

db = SQLAlchemy(app)


SESSION_TYPE = 'mongodb'
SESSION_MONGODB = MongoClient(os.environ['V3_DB_1_PORT_27017_TCP_ADDR'],27017)
app.config.from_object(__name__)
Session(app)

@app.route('/')
def home():
   	return ', '.join(key for key in os.environ)
    if not 'sid' in session or not session['sid']:
        session['sid'] = str(uuid4())
    instance_number = abs(hash(session['sid']))%POPULATION
    #map instance_number to genomes in population pool
    page = render_template('index.html')
    return page

@app.route('/redirect')
def redirect():
    outbound="http://www.geenstijl.nl"
    return render_template('redirect.html',outbound = outbound)

@app.route("/new_session")
def new_session():
    #raise Exception(dir(session))
    session['sid'] = None
    return redirect(url_for('home'))

@app.route('/dump')
def dump_data():
    #dump all data from mongodb to csv and ship to user
    db = SESSION_MONGODB
    list_sessions = [parse_record(doc) for doc in db.session_tracker.sessions.find()]
    csv = ''.join(list_sessions)
    return Response(csv,
                    mimetype="text/csv",
                    headers={"Content-disposition":"attachment; filename=logs.csv"})

def parse_record(record):
    sid = record[u'sid']
    refreshed = record[u'data'][u'refreshed']
    return "{0},{1}\n".format(sid,refreshed)
   

if __name__ == "__main__":
    app.secret_key = 'F12Zr47j\3yX R~X@H!jmM]Lwf/,?KT'
    app.run(host='0.0.0.0', debug=True)
